---
functional:
  - Пользователь должен иметь возможность зарегистрироваться на сайте.
  - Пользователь должен иметь возможность авторизоваться на сайте по имеющемуся
    логину и паролю, а так же выйти из своего аккаунта.
  - Пользователь должен иметь возможность играть с другим пользователем, другом
    или ботом.
  - На сайте должна быть предоставлена возможность двум игрокам соревноваться
    друг с другом в решении задач и видеть написание кода друг у друга.
  - На главной странице авторизованного пользователя должны быть шапка, подвал и
    блоки с таблицей игроков (с отображением данных об играх), блок создания
    игры, общий чат и игроки онлайн.
  - Сайт должен быть на английском языке и иметь возможность прочитать задание
    игры на русском.
  - В шапке сайта в левом углу должен быть логотип сайта, а в правом -
    количество игроков онлайн, значок приглашений и кнопка входа в личный
    профиль.
  - В личном профиле должны отображаться имя пользователя, количество
    заработанных баллов, место в общем рейтинге и аватар пользователя (если его
    нет, - то заменяющий его значок).
  - В личном профиле должны быть следующие разделы - My Profile, Settings, Users
    rating, Tasks, Tournaments.
  - При входе в My profile должны отображаться личные данные пользователя
    (логотип, выбранный язык программирования, время присоединения к проекту,
    общая статистика активности, данные о пройденных играх и их общее количество
  - В настройках пользователь должен иметь возможность изменить имя, язык
    программирования, клан, а так же режим и уровень громкости. Так же должны
    быть ссылки для связки аккаунта с Github и Discord.
  - В Users rating должна отображаться таблица рейтинга игроков с постраничным
    выводом и возможностью менять количество строк на странице, а так же с
    возможностью перехода в начало и конец списка. Должно отображаться общее
    количество игроков. Рейтинг должен иметь сортировку за неделю, месяц и все
    время В таблице должно быть имя игрока, номер места в рейтинге и ссылка на
    профиль на Github игрока, если он привязан. Должна быть фильтрация по
    убыванию и возврастанию у значений в столбцах (Rank, Reting, Games played,
    Joined). Должен быть отдельный фильтр по играм с ботом.
  - В разделе Tasks должна отображаться таблица со всеми созданными
    пользователями заданиями и данными о пользователе и задании. Пользователь
    должен иметь возможность создать новое задание для игры, а так же открыть
    для просмотра уже созданное.
  - В разделе Tournaments должна отображаться таблица турниров с названием
    турнира, его типом, уровнем сложности, статусом и датой начала. Должна быть
    ссылка на страницу, где можно прочитать подробное его описание и
    присоединиться к турниру, а так же участвовать в общем чате турнира.
  - На сайте должна быть ссылка SourceCode, которая приводит на страницу проекта
    в Github, где можно завести багрепорт или предложить какую-либо новую
    функциональность, а так же посмотреть или проверить то, что уже было
    заведено другими пользователями.
  - Должны быть ссылки на главную страницу сайта Hexlet, а так же ссылки на
    присоединение к общему чату игроков в телеграмме и дискорде.
  - На главной странице должны быть 3 вкладки - Lobby, Tournaments, History. В
    них должна отображаться соответствующая информация об играх, турнирах и
    участниках.
  - Доступ к просмотру подробной информации о прошедших играх и турнирах, а так
    же тестирование собственных заданий должны быть только для премиум
    подписчиков.
  - Сайт должен иметь мобильную версию.
  - При создании игры, должны быть 4 уровня сложности; выбор игры с другим
    пользователем, с другом или ботом; установка лимита времени на игру, а так
    же выбор задания (любого задания из выпадающего списка, рандомный выбор и по
    тегам).
  - Каждый игрок должен видеть редактор с кодом соперника справа, а свой - слева
    в режиме онлайн. Должен отображаться таймер убывания времени игры, имена
    игроков и счет (если игра повторяется неоднократно). Наверху должен
    находиться таймер игры, ниже – задание, справа – чат, в котором можно
    общаться с соперником и другими зрителями.
  - Любой желающий должен иметь возможность зайти в запущенную игру зайти в
    качестве зрителя. Чтобы следить за открытыми играми без посещения сайта,
    можно установить расширение для Chrome.
  - В любой игре должна быть кнопка ‘Show guide’, нажатие на которую, расскажет
    и покажет все поля, обозначения и кнопки. При первом запуске игры, guide
    должен появиться автоматически. Должен отображаться таймер убывания времени
    игры, имена игроков и счет (если игра повторяется неоднократно).
  - Каждый игрок должен иметь кнопку "Run" для проверки своего решения. Попыток
    проверки - не ограничено. Когда при проверке кода окажется, что решение
    правильное, игра считается законченной в пользу этого игрока. Должна быть
    кнопка "Give up", нажатие на которую до окончания времени игры,
    приравнивается к проигрышу. Должна быть кнопка сброса написанного кода.
  - Когда один из игроков находит верное решение, обоим игрокам высвечивается
    модальное окно, в котором написано, кто является победителем этой игры.
  - Игрок-победитель может выйти из игры по нажатию кнопки "Back to home".
    Кнопка "Run" у него будет более неактивна, но он может остаться и посмотреть
    ещё раз на свой код. Соперник тоже может выйти, а может доиграть до конца.
  - После окончания игры должна быть возможность сыграть эту же игру заново или
    вернуться на главную страницу.
  - Когда оба игрока вышли, игра считается полностью законченной и попадает в
    раздел History.
  - При подключении к игре с другим пользователем, пользователь находится в
    режиме ожидания второго игрока. Игра высвечивается как "доступная для
    подключения" у других пользователей. Второй пользователь нажимает "Connect
    to game" и обоих перебрасывает в игру.
non-functional:
  - Сайт должен быть разработан с учетом удобства использования и оптимизирован
    для скорости работы.
  - Сайт должен быть безопасным и защищать данные пользователя.
  - Сайт должен быть удобным на мобильном устройстве.
  - Важно, чтобы сайт мог обрабатывать большое количество трафика (например,
    1000 одновременных пользователей).
  - Сайт нужно протестировать на совместимость с последними версиями браузеров.
implisit:
  - Пользователь не должен иметь возможность редактировать данные (кроме личных
    настроек) на сайте.
